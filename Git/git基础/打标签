Git 可以给仓库历史中的某一个提交打上标签,以示重要。 比较有代表性的是人们会使用这个功能来标记发布结点。

列出所有标签  命令 (git tag)    以字母顺序列出
查看某个系列  命令  (git tag -l "xxxx*")



创建标签
Git 支持两种标签：轻量标签(lightweight)与附注标签(annotated)。

轻量标签很像一个不会改变的分支——它只是某个特定提交的引用。
如果你只是想用一个临时的标签, 或者因为某些原因信息,那么也可以用轻量标签。

附注标签是存储在 Git 数据库中的一个完整对象, 它们是可以被校验的,其中包含打标签者的名字、电子邮件地址、日期时间,
此外还有一个标签信息,并且可以使用 GNU Privacy Guard (GPG)签名并验证。 通常会建议创建附注标签,这样你可以拥有以上所有信息。

附注标签  命令(git tag -a <tag> -m "注释")
-m 选项指定了一条将会存储在标签中的信息。 如果没有为附注标签指定一条信息,Git 会启动编辑器要求你输入信息。

轻量标签  命令(git tag <tag>)

后期打标签 需要找到之前的提交记录,然后使用命令 (git tag -a <tag> hash值前7位)



共享标签
默认情况下,git push 命令并不会传送标签到远程仓库服务器上。 
在创建完标签后你必须显式地推送标签到共享服务器上。 这个过程就像共享远程分支一样——你可以运行命令 (git push origin <tag>)。
如果要全部推送,使用命令(git push origin --tags)



删除标签
要删除掉你本地仓库上的标签,可以使用命令 git tag -d <tag>。 
使用 git push <remote> :refs/tags/<tagname> 来更新你的远程仓库(将冒号前面的空值推送到远程标签名,从而高效地删除它。)
第二种更直观的删除远程标签的方式 命令(git push origin --delete <tag>)






